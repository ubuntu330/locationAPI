# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AccessPointInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, access_point_id: AccessPointId=None, location_info: LocationInfo=None, connection_type: ConnectionType=None, operation_status: OperationStatus=None, number_of_users: NumberOfUsers=None, timezone: Timezone=None, interest_realm: InterestRealm=None, resource_url: ResourceURL=None):  # noqa: E501
        """AccessPointInfo - a model defined in Swagger

        :param access_point_id: The access_point_id of this AccessPointInfo.  # noqa: E501
        :type access_point_id: AccessPointId
        :param location_info: The location_info of this AccessPointInfo.  # noqa: E501
        :type location_info: LocationInfo
        :param connection_type: The connection_type of this AccessPointInfo.  # noqa: E501
        :type connection_type: ConnectionType
        :param operation_status: The operation_status of this AccessPointInfo.  # noqa: E501
        :type operation_status: OperationStatus
        :param number_of_users: The number_of_users of this AccessPointInfo.  # noqa: E501
        :type number_of_users: NumberOfUsers
        :param timezone: The timezone of this AccessPointInfo.  # noqa: E501
        :type timezone: Timezone
        :param interest_realm: The interest_realm of this AccessPointInfo.  # noqa: E501
        :type interest_realm: InterestRealm
        :param resource_url: The resource_url of this AccessPointInfo.  # noqa: E501
        :type resource_url: ResourceURL
        """
        self.swagger_types = {
            'access_point_id': AccessPointId,
            'location_info': LocationInfo,
            'connection_type': ConnectionType,
            'operation_status': OperationStatus,
            'number_of_users': NumberOfUsers,
            'timezone': Timezone,
            'interest_realm': InterestRealm,
            'resource_url': ResourceURL
        }

        self.attribute_map = {
            'access_point_id': 'accessPointId',
            'location_info': 'locationInfo',
            'connection_type': 'connectionType',
            'operation_status': 'operationStatus',
            'number_of_users': 'numberOfUsers',
            'timezone': 'timezone',
            'interest_realm': 'interestRealm',
            'resource_url': 'resourceURL'
        }

        self._access_point_id = access_point_id
        self._location_info = location_info
        self._connection_type = connection_type
        self._operation_status = operation_status
        self._number_of_users = number_of_users
        self._timezone = timezone
        self._interest_realm = interest_realm
        self._resource_url = resource_url

    @classmethod
    def from_dict(cls, dikt) -> 'AccessPointInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccessPointInfo of this AccessPointInfo.  # noqa: E501
        :rtype: AccessPointInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_point_id(self) -> AccessPointId:
        """Gets the access_point_id of this AccessPointInfo.


        :return: The access_point_id of this AccessPointInfo.
        :rtype: AccessPointId
        """
        return self._access_point_id

    @access_point_id.setter
    def access_point_id(self, access_point_id: AccessPointId):
        """Sets the access_point_id of this AccessPointInfo.


        :param access_point_id: The access_point_id of this AccessPointInfo.
        :type access_point_id: AccessPointId
        """
        if access_point_id is None:
            raise ValueError("Invalid value for `access_point_id`, must not be `None`")  # noqa: E501

        self._access_point_id = access_point_id

    @property
    def location_info(self) -> LocationInfo:
        """Gets the location_info of this AccessPointInfo.


        :return: The location_info of this AccessPointInfo.
        :rtype: LocationInfo
        """
        return self._location_info

    @location_info.setter
    def location_info(self, location_info: LocationInfo):
        """Sets the location_info of this AccessPointInfo.


        :param location_info: The location_info of this AccessPointInfo.
        :type location_info: LocationInfo
        """

        self._location_info = location_info

    @property
    def connection_type(self) -> ConnectionType:
        """Gets the connection_type of this AccessPointInfo.


        :return: The connection_type of this AccessPointInfo.
        :rtype: ConnectionType
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type: ConnectionType):
        """Sets the connection_type of this AccessPointInfo.


        :param connection_type: The connection_type of this AccessPointInfo.
        :type connection_type: ConnectionType
        """
        if connection_type is None:
            raise ValueError("Invalid value for `connection_type`, must not be `None`")  # noqa: E501

        self._connection_type = connection_type

    @property
    def operation_status(self) -> OperationStatus:
        """Gets the operation_status of this AccessPointInfo.


        :return: The operation_status of this AccessPointInfo.
        :rtype: OperationStatus
        """
        return self._operation_status

    @operation_status.setter
    def operation_status(self, operation_status: OperationStatus):
        """Sets the operation_status of this AccessPointInfo.


        :param operation_status: The operation_status of this AccessPointInfo.
        :type operation_status: OperationStatus
        """
        if operation_status is None:
            raise ValueError("Invalid value for `operation_status`, must not be `None`")  # noqa: E501

        self._operation_status = operation_status

    @property
    def number_of_users(self) -> NumberOfUsers:
        """Gets the number_of_users of this AccessPointInfo.


        :return: The number_of_users of this AccessPointInfo.
        :rtype: NumberOfUsers
        """
        return self._number_of_users

    @number_of_users.setter
    def number_of_users(self, number_of_users: NumberOfUsers):
        """Sets the number_of_users of this AccessPointInfo.


        :param number_of_users: The number_of_users of this AccessPointInfo.
        :type number_of_users: NumberOfUsers
        """
        if number_of_users is None:
            raise ValueError("Invalid value for `number_of_users`, must not be `None`")  # noqa: E501

        self._number_of_users = number_of_users

    @property
    def timezone(self) -> Timezone:
        """Gets the timezone of this AccessPointInfo.


        :return: The timezone of this AccessPointInfo.
        :rtype: Timezone
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone: Timezone):
        """Sets the timezone of this AccessPointInfo.


        :param timezone: The timezone of this AccessPointInfo.
        :type timezone: Timezone
        """

        self._timezone = timezone

    @property
    def interest_realm(self) -> InterestRealm:
        """Gets the interest_realm of this AccessPointInfo.


        :return: The interest_realm of this AccessPointInfo.
        :rtype: InterestRealm
        """
        return self._interest_realm

    @interest_realm.setter
    def interest_realm(self, interest_realm: InterestRealm):
        """Sets the interest_realm of this AccessPointInfo.


        :param interest_realm: The interest_realm of this AccessPointInfo.
        :type interest_realm: InterestRealm
        """

        self._interest_realm = interest_realm

    @property
    def resource_url(self) -> ResourceURL:
        """Gets the resource_url of this AccessPointInfo.


        :return: The resource_url of this AccessPointInfo.
        :rtype: ResourceURL
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: ResourceURL):
        """Sets the resource_url of this AccessPointInfo.


        :param resource_url: The resource_url of this AccessPointInfo.
        :type resource_url: ResourceURL
        """
        if resource_url is None:
            raise ValueError("Invalid value for `resource_url`, must not be `None`")  # noqa: E501

        self._resource_url = resource_url
