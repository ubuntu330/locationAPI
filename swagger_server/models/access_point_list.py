# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AccessPointList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, zone_id: ZoneId=None, access_point: List[AccessPointInfo]=None, resource_url: ResourceURL=None):  # noqa: E501
        """AccessPointList - a model defined in Swagger

        :param zone_id: The zone_id of this AccessPointList.  # noqa: E501
        :type zone_id: ZoneId
        :param access_point: The access_point of this AccessPointList.  # noqa: E501
        :type access_point: List[AccessPointInfo]
        :param resource_url: The resource_url of this AccessPointList.  # noqa: E501
        :type resource_url: ResourceURL
        """
        self.swagger_types = {
            'zone_id': ZoneId,
            'access_point': List[AccessPointInfo],
            'resource_url': ResourceURL
        }

        self.attribute_map = {
            'zone_id': 'zoneId',
            'access_point': 'accessPoint',
            'resource_url': 'resourceURL'
        }

        self._zone_id = zone_id
        self._access_point = access_point
        self._resource_url = resource_url

    @classmethod
    def from_dict(cls, dikt) -> 'AccessPointList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccessPointList of this AccessPointList.  # noqa: E501
        :rtype: AccessPointList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this AccessPointList.


        :return: The zone_id of this AccessPointList.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this AccessPointList.


        :param zone_id: The zone_id of this AccessPointList.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def access_point(self) -> List[AccessPointInfo]:
        """Gets the access_point of this AccessPointList.

        Collection of the access point information list.  # noqa: E501

        :return: The access_point of this AccessPointList.
        :rtype: List[AccessPointInfo]
        """
        return self._access_point

    @access_point.setter
    def access_point(self, access_point: List[AccessPointInfo]):
        """Sets the access_point of this AccessPointList.

        Collection of the access point information list.  # noqa: E501

        :param access_point: The access_point of this AccessPointList.
        :type access_point: List[AccessPointInfo]
        """

        self._access_point = access_point

    @property
    def resource_url(self) -> ResourceURL:
        """Gets the resource_url of this AccessPointList.


        :return: The resource_url of this AccessPointList.
        :rtype: ResourceURL
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: ResourceURL):
        """Sets the resource_url of this AccessPointList.


        :param resource_url: The resource_url of this AccessPointList.
        :type resource_url: ResourceURL
        """
        if resource_url is None:
            raise ValueError("Invalid value for `resource_url`, must not be `None`")  # noqa: E501

        self._resource_url = resource_url
