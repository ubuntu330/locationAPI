# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZonalPresenceNotification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, callback_data: CallbackData=None, zone_id: ZoneId=None, address: Address=None, interest_realm: InterestRealm=None, user_event_type: UserEventType=None, current_access_point_id: CurrentAccessPointId=None, previous_access_point_id: PreviousAccessPointId=None, timestamp: Timestamp=None, link: List[Link]=None):  # noqa: E501
        """ZonalPresenceNotification - a model defined in Swagger

        :param callback_data: The callback_data of this ZonalPresenceNotification.  # noqa: E501
        :type callback_data: CallbackData
        :param zone_id: The zone_id of this ZonalPresenceNotification.  # noqa: E501
        :type zone_id: ZoneId
        :param address: The address of this ZonalPresenceNotification.  # noqa: E501
        :type address: Address
        :param interest_realm: The interest_realm of this ZonalPresenceNotification.  # noqa: E501
        :type interest_realm: InterestRealm
        :param user_event_type: The user_event_type of this ZonalPresenceNotification.  # noqa: E501
        :type user_event_type: UserEventType
        :param current_access_point_id: The current_access_point_id of this ZonalPresenceNotification.  # noqa: E501
        :type current_access_point_id: CurrentAccessPointId
        :param previous_access_point_id: The previous_access_point_id of this ZonalPresenceNotification.  # noqa: E501
        :type previous_access_point_id: PreviousAccessPointId
        :param timestamp: The timestamp of this ZonalPresenceNotification.  # noqa: E501
        :type timestamp: Timestamp
        :param link: The link of this ZonalPresenceNotification.  # noqa: E501
        :type link: List[Link]
        """
        self.swagger_types = {
            'callback_data': CallbackData,
            'zone_id': ZoneId,
            'address': Address,
            'interest_realm': InterestRealm,
            'user_event_type': UserEventType,
            'current_access_point_id': CurrentAccessPointId,
            'previous_access_point_id': PreviousAccessPointId,
            'timestamp': Timestamp,
            'link': List[Link]
        }

        self.attribute_map = {
            'callback_data': 'callbackData',
            'zone_id': 'zoneId',
            'address': 'address',
            'interest_realm': 'interestRealm',
            'user_event_type': 'userEventType',
            'current_access_point_id': 'currentAccessPointId',
            'previous_access_point_id': 'previousAccessPointId',
            'timestamp': 'timestamp',
            'link': 'link'
        }

        self._callback_data = callback_data
        self._zone_id = zone_id
        self._address = address
        self._interest_realm = interest_realm
        self._user_event_type = user_event_type
        self._current_access_point_id = current_access_point_id
        self._previous_access_point_id = previous_access_point_id
        self._timestamp = timestamp
        self._link = link

    @classmethod
    def from_dict(cls, dikt) -> 'ZonalPresenceNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZonalPresenceNotification of this ZonalPresenceNotification.  # noqa: E501
        :rtype: ZonalPresenceNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_data(self) -> CallbackData:
        """Gets the callback_data of this ZonalPresenceNotification.


        :return: The callback_data of this ZonalPresenceNotification.
        :rtype: CallbackData
        """
        return self._callback_data

    @callback_data.setter
    def callback_data(self, callback_data: CallbackData):
        """Sets the callback_data of this ZonalPresenceNotification.


        :param callback_data: The callback_data of this ZonalPresenceNotification.
        :type callback_data: CallbackData
        """

        self._callback_data = callback_data

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this ZonalPresenceNotification.


        :return: The zone_id of this ZonalPresenceNotification.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this ZonalPresenceNotification.


        :param zone_id: The zone_id of this ZonalPresenceNotification.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def address(self) -> Address:
        """Gets the address of this ZonalPresenceNotification.


        :return: The address of this ZonalPresenceNotification.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address: Address):
        """Sets the address of this ZonalPresenceNotification.


        :param address: The address of this ZonalPresenceNotification.
        :type address: Address
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")  # noqa: E501

        self._address = address

    @property
    def interest_realm(self) -> InterestRealm:
        """Gets the interest_realm of this ZonalPresenceNotification.


        :return: The interest_realm of this ZonalPresenceNotification.
        :rtype: InterestRealm
        """
        return self._interest_realm

    @interest_realm.setter
    def interest_realm(self, interest_realm: InterestRealm):
        """Sets the interest_realm of this ZonalPresenceNotification.


        :param interest_realm: The interest_realm of this ZonalPresenceNotification.
        :type interest_realm: InterestRealm
        """

        self._interest_realm = interest_realm

    @property
    def user_event_type(self) -> UserEventType:
        """Gets the user_event_type of this ZonalPresenceNotification.


        :return: The user_event_type of this ZonalPresenceNotification.
        :rtype: UserEventType
        """
        return self._user_event_type

    @user_event_type.setter
    def user_event_type(self, user_event_type: UserEventType):
        """Sets the user_event_type of this ZonalPresenceNotification.


        :param user_event_type: The user_event_type of this ZonalPresenceNotification.
        :type user_event_type: UserEventType
        """
        if user_event_type is None:
            raise ValueError("Invalid value for `user_event_type`, must not be `None`")  # noqa: E501

        self._user_event_type = user_event_type

    @property
    def current_access_point_id(self) -> CurrentAccessPointId:
        """Gets the current_access_point_id of this ZonalPresenceNotification.


        :return: The current_access_point_id of this ZonalPresenceNotification.
        :rtype: CurrentAccessPointId
        """
        return self._current_access_point_id

    @current_access_point_id.setter
    def current_access_point_id(self, current_access_point_id: CurrentAccessPointId):
        """Sets the current_access_point_id of this ZonalPresenceNotification.


        :param current_access_point_id: The current_access_point_id of this ZonalPresenceNotification.
        :type current_access_point_id: CurrentAccessPointId
        """
        if current_access_point_id is None:
            raise ValueError("Invalid value for `current_access_point_id`, must not be `None`")  # noqa: E501

        self._current_access_point_id = current_access_point_id

    @property
    def previous_access_point_id(self) -> PreviousAccessPointId:
        """Gets the previous_access_point_id of this ZonalPresenceNotification.


        :return: The previous_access_point_id of this ZonalPresenceNotification.
        :rtype: PreviousAccessPointId
        """
        return self._previous_access_point_id

    @previous_access_point_id.setter
    def previous_access_point_id(self, previous_access_point_id: PreviousAccessPointId):
        """Sets the previous_access_point_id of this ZonalPresenceNotification.


        :param previous_access_point_id: The previous_access_point_id of this ZonalPresenceNotification.
        :type previous_access_point_id: PreviousAccessPointId
        """

        self._previous_access_point_id = previous_access_point_id

    @property
    def timestamp(self) -> Timestamp:
        """Gets the timestamp of this ZonalPresenceNotification.


        :return: The timestamp of this ZonalPresenceNotification.
        :rtype: Timestamp
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: Timestamp):
        """Sets the timestamp of this ZonalPresenceNotification.


        :param timestamp: The timestamp of this ZonalPresenceNotification.
        :type timestamp: Timestamp
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def link(self) -> List[Link]:
        """Gets the link of this ZonalPresenceNotification.

        Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification.  # noqa: E501

        :return: The link of this ZonalPresenceNotification.
        :rtype: List[Link]
        """
        return self._link

    @link.setter
    def link(self, link: List[Link]):
        """Sets the link of this ZonalPresenceNotification.

        Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification.  # noqa: E501

        :param link: The link of this ZonalPresenceNotification.
        :type link: List[Link]
        """

        self._link = link
