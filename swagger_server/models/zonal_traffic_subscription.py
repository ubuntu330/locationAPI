# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZonalTrafficSubscription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_correlator: ClientCorrelator=None, callback_reference: CallbackReference=None, zone_id: ZoneId=None, interest_realm: List[InterestRealm]=None, user_event_criteria: List[UserEventType]=None, duration: Duration=None, resource_url: ResourceURL=None):  # noqa: E501
        """ZonalTrafficSubscription - a model defined in Swagger

        :param client_correlator: The client_correlator of this ZonalTrafficSubscription.  # noqa: E501
        :type client_correlator: ClientCorrelator
        :param callback_reference: The callback_reference of this ZonalTrafficSubscription.  # noqa: E501
        :type callback_reference: CallbackReference
        :param zone_id: The zone_id of this ZonalTrafficSubscription.  # noqa: E501
        :type zone_id: ZoneId
        :param interest_realm: The interest_realm of this ZonalTrafficSubscription.  # noqa: E501
        :type interest_realm: List[InterestRealm]
        :param user_event_criteria: The user_event_criteria of this ZonalTrafficSubscription.  # noqa: E501
        :type user_event_criteria: List[UserEventType]
        :param duration: The duration of this ZonalTrafficSubscription.  # noqa: E501
        :type duration: Duration
        :param resource_url: The resource_url of this ZonalTrafficSubscription.  # noqa: E501
        :type resource_url: ResourceURL
        """
        self.swagger_types = {
            'client_correlator': ClientCorrelator,
            'callback_reference': CallbackReference,
            'zone_id': ZoneId,
            'interest_realm': List[InterestRealm],
            'user_event_criteria': List[UserEventType],
            'duration': Duration,
            'resource_url': ResourceURL
        }

        self.attribute_map = {
            'client_correlator': 'clientCorrelator',
            'callback_reference': 'callbackReference',
            'zone_id': 'zoneId',
            'interest_realm': 'interestRealm',
            'user_event_criteria': 'userEventCriteria',
            'duration': 'duration',
            'resource_url': 'resourceURL'
        }

        self._client_correlator = client_correlator
        self._callback_reference = callback_reference
        self._zone_id = zone_id
        self._interest_realm = interest_realm
        self._user_event_criteria = user_event_criteria
        self._duration = duration
        self._resource_url = resource_url

    @classmethod
    def from_dict(cls, dikt) -> 'ZonalTrafficSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZonalTrafficSubscription of this ZonalTrafficSubscription.  # noqa: E501
        :rtype: ZonalTrafficSubscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_correlator(self) -> ClientCorrelator:
        """Gets the client_correlator of this ZonalTrafficSubscription.


        :return: The client_correlator of this ZonalTrafficSubscription.
        :rtype: ClientCorrelator
        """
        return self._client_correlator

    @client_correlator.setter
    def client_correlator(self, client_correlator: ClientCorrelator):
        """Sets the client_correlator of this ZonalTrafficSubscription.


        :param client_correlator: The client_correlator of this ZonalTrafficSubscription.
        :type client_correlator: ClientCorrelator
        """

        self._client_correlator = client_correlator

    @property
    def callback_reference(self) -> CallbackReference:
        """Gets the callback_reference of this ZonalTrafficSubscription.


        :return: The callback_reference of this ZonalTrafficSubscription.
        :rtype: CallbackReference
        """
        return self._callback_reference

    @callback_reference.setter
    def callback_reference(self, callback_reference: CallbackReference):
        """Sets the callback_reference of this ZonalTrafficSubscription.


        :param callback_reference: The callback_reference of this ZonalTrafficSubscription.
        :type callback_reference: CallbackReference
        """
        if callback_reference is None:
            raise ValueError("Invalid value for `callback_reference`, must not be `None`")  # noqa: E501

        self._callback_reference = callback_reference

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this ZonalTrafficSubscription.


        :return: The zone_id of this ZonalTrafficSubscription.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this ZonalTrafficSubscription.


        :param zone_id: The zone_id of this ZonalTrafficSubscription.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def interest_realm(self) -> List[InterestRealm]:
        """Gets the interest_realm of this ZonalTrafficSubscription.

        Interest realms of access points within a zone (e.g. geographical area, a type of industry etc.).  # noqa: E501

        :return: The interest_realm of this ZonalTrafficSubscription.
        :rtype: List[InterestRealm]
        """
        return self._interest_realm

    @interest_realm.setter
    def interest_realm(self, interest_realm: List[InterestRealm]):
        """Sets the interest_realm of this ZonalTrafficSubscription.

        Interest realms of access points within a zone (e.g. geographical area, a type of industry etc.).  # noqa: E501

        :param interest_realm: The interest_realm of this ZonalTrafficSubscription.
        :type interest_realm: List[InterestRealm]
        """

        self._interest_realm = interest_realm

    @property
    def user_event_criteria(self) -> List[UserEventType]:
        """Gets the user_event_criteria of this ZonalTrafficSubscription.

        List of user event values to generate notifications for (these apply to zone identifier or all interest realms within zone identifier specified). If this element is missing, a notification is requested to be generated for any change in user event.  # noqa: E501

        :return: The user_event_criteria of this ZonalTrafficSubscription.
        :rtype: List[UserEventType]
        """
        return self._user_event_criteria

    @user_event_criteria.setter
    def user_event_criteria(self, user_event_criteria: List[UserEventType]):
        """Sets the user_event_criteria of this ZonalTrafficSubscription.

        List of user event values to generate notifications for (these apply to zone identifier or all interest realms within zone identifier specified). If this element is missing, a notification is requested to be generated for any change in user event.  # noqa: E501

        :param user_event_criteria: The user_event_criteria of this ZonalTrafficSubscription.
        :type user_event_criteria: List[UserEventType]
        """

        self._user_event_criteria = user_event_criteria

    @property
    def duration(self) -> Duration:
        """Gets the duration of this ZonalTrafficSubscription.


        :return: The duration of this ZonalTrafficSubscription.
        :rtype: Duration
        """
        return self._duration

    @duration.setter
    def duration(self, duration: Duration):
        """Sets the duration of this ZonalTrafficSubscription.


        :param duration: The duration of this ZonalTrafficSubscription.
        :type duration: Duration
        """

        self._duration = duration

    @property
    def resource_url(self) -> ResourceURL:
        """Gets the resource_url of this ZonalTrafficSubscription.


        :return: The resource_url of this ZonalTrafficSubscription.
        :rtype: ResourceURL
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: ResourceURL):
        """Sets the resource_url of this ZonalTrafficSubscription.


        :param resource_url: The resource_url of this ZonalTrafficSubscription.
        :type resource_url: ResourceURL
        """

        self._resource_url = resource_url
