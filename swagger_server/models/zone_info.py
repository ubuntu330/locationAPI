# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZoneInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, zone_id: ZoneId=None, number_of_access_points: NumberOfAccessPoints=None, number_of_unservicable_access_points: NumberOfUnserviceableAccessPoints=None, number_of_users: NumberOfUsers=None, resource_url: ResourceURL=None):  # noqa: E501
        """ZoneInfo - a model defined in Swagger

        :param zone_id: The zone_id of this ZoneInfo.  # noqa: E501
        :type zone_id: ZoneId
        :param number_of_access_points: The number_of_access_points of this ZoneInfo.  # noqa: E501
        :type number_of_access_points: NumberOfAccessPoints
        :param number_of_unservicable_access_points: The number_of_unservicable_access_points of this ZoneInfo.  # noqa: E501
        :type number_of_unservicable_access_points: NumberOfUnserviceableAccessPoints
        :param number_of_users: The number_of_users of this ZoneInfo.  # noqa: E501
        :type number_of_users: NumberOfUsers
        :param resource_url: The resource_url of this ZoneInfo.  # noqa: E501
        :type resource_url: ResourceURL
        """
        self.swagger_types = {
            'zone_id': ZoneId,
            'number_of_access_points': NumberOfAccessPoints,
            'number_of_unservicable_access_points': NumberOfUnserviceableAccessPoints,
            'number_of_users': NumberOfUsers,
            'resource_url': ResourceURL
        }

        self.attribute_map = {
            'zone_id': 'zoneId',
            'number_of_access_points': 'numberOfAccessPoints',
            'number_of_unservicable_access_points': 'numberOfUnservicableAccessPoints',
            'number_of_users': 'numberOfUsers',
            'resource_url': 'resourceURL'
        }

        self._zone_id = zone_id
        self._number_of_access_points = number_of_access_points
        self._number_of_unservicable_access_points = number_of_unservicable_access_points
        self._number_of_users = number_of_users
        self._resource_url = resource_url

    @classmethod
    def from_dict(cls, dikt) -> 'ZoneInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZoneInfo of this ZoneInfo.  # noqa: E501
        :rtype: ZoneInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this ZoneInfo.


        :return: The zone_id of this ZoneInfo.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this ZoneInfo.


        :param zone_id: The zone_id of this ZoneInfo.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def number_of_access_points(self) -> NumberOfAccessPoints:
        """Gets the number_of_access_points of this ZoneInfo.


        :return: The number_of_access_points of this ZoneInfo.
        :rtype: NumberOfAccessPoints
        """
        return self._number_of_access_points

    @number_of_access_points.setter
    def number_of_access_points(self, number_of_access_points: NumberOfAccessPoints):
        """Sets the number_of_access_points of this ZoneInfo.


        :param number_of_access_points: The number_of_access_points of this ZoneInfo.
        :type number_of_access_points: NumberOfAccessPoints
        """
        if number_of_access_points is None:
            raise ValueError("Invalid value for `number_of_access_points`, must not be `None`")  # noqa: E501

        self._number_of_access_points = number_of_access_points

    @property
    def number_of_unservicable_access_points(self) -> NumberOfUnserviceableAccessPoints:
        """Gets the number_of_unservicable_access_points of this ZoneInfo.


        :return: The number_of_unservicable_access_points of this ZoneInfo.
        :rtype: NumberOfUnserviceableAccessPoints
        """
        return self._number_of_unservicable_access_points

    @number_of_unservicable_access_points.setter
    def number_of_unservicable_access_points(self, number_of_unservicable_access_points: NumberOfUnserviceableAccessPoints):
        """Sets the number_of_unservicable_access_points of this ZoneInfo.


        :param number_of_unservicable_access_points: The number_of_unservicable_access_points of this ZoneInfo.
        :type number_of_unservicable_access_points: NumberOfUnserviceableAccessPoints
        """
        if number_of_unservicable_access_points is None:
            raise ValueError("Invalid value for `number_of_unservicable_access_points`, must not be `None`")  # noqa: E501

        self._number_of_unservicable_access_points = number_of_unservicable_access_points

    @property
    def number_of_users(self) -> NumberOfUsers:
        """Gets the number_of_users of this ZoneInfo.


        :return: The number_of_users of this ZoneInfo.
        :rtype: NumberOfUsers
        """
        return self._number_of_users

    @number_of_users.setter
    def number_of_users(self, number_of_users: NumberOfUsers):
        """Sets the number_of_users of this ZoneInfo.


        :param number_of_users: The number_of_users of this ZoneInfo.
        :type number_of_users: NumberOfUsers
        """
        if number_of_users is None:
            raise ValueError("Invalid value for `number_of_users`, must not be `None`")  # noqa: E501

        self._number_of_users = number_of_users

    @property
    def resource_url(self) -> ResourceURL:
        """Gets the resource_url of this ZoneInfo.


        :return: The resource_url of this ZoneInfo.
        :rtype: ResourceURL
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: ResourceURL):
        """Sets the resource_url of this ZoneInfo.


        :param resource_url: The resource_url of this ZoneInfo.
        :type resource_url: ResourceURL
        """
        if resource_url is None:
            raise ValueError("Invalid value for `resource_url`, must not be `None`")  # noqa: E501

        self._resource_url = resource_url
