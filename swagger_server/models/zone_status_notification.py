# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZoneStatusNotification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, callback_data: CallbackData=None, zone_id: ZoneId=None, access_point_id: AccessPointId=None, number_of_users_in_zone: NumberOfUsersInZone=None, number_of_users_in_ap: NumberOfUsersInAP=None, operation_status: OperationStatus=None, timestamp: Timestamp=None, link: List[Link]=None):  # noqa: E501
        """ZoneStatusNotification - a model defined in Swagger

        :param callback_data: The callback_data of this ZoneStatusNotification.  # noqa: E501
        :type callback_data: CallbackData
        :param zone_id: The zone_id of this ZoneStatusNotification.  # noqa: E501
        :type zone_id: ZoneId
        :param access_point_id: The access_point_id of this ZoneStatusNotification.  # noqa: E501
        :type access_point_id: AccessPointId
        :param number_of_users_in_zone: The number_of_users_in_zone of this ZoneStatusNotification.  # noqa: E501
        :type number_of_users_in_zone: NumberOfUsersInZone
        :param number_of_users_in_ap: The number_of_users_in_ap of this ZoneStatusNotification.  # noqa: E501
        :type number_of_users_in_ap: NumberOfUsersInAP
        :param operation_status: The operation_status of this ZoneStatusNotification.  # noqa: E501
        :type operation_status: OperationStatus
        :param timestamp: The timestamp of this ZoneStatusNotification.  # noqa: E501
        :type timestamp: Timestamp
        :param link: The link of this ZoneStatusNotification.  # noqa: E501
        :type link: List[Link]
        """
        self.swagger_types = {
            'callback_data': CallbackData,
            'zone_id': ZoneId,
            'access_point_id': AccessPointId,
            'number_of_users_in_zone': NumberOfUsersInZone,
            'number_of_users_in_ap': NumberOfUsersInAP,
            'operation_status': OperationStatus,
            'timestamp': Timestamp,
            'link': List[Link]
        }

        self.attribute_map = {
            'callback_data': 'callbackData',
            'zone_id': 'zoneId',
            'access_point_id': 'accessPointId',
            'number_of_users_in_zone': 'numberOfUsersInZone',
            'number_of_users_in_ap': 'numberOfUsersInAP',
            'operation_status': 'operationStatus',
            'timestamp': 'timestamp',
            'link': 'link'
        }

        self._callback_data = callback_data
        self._zone_id = zone_id
        self._access_point_id = access_point_id
        self._number_of_users_in_zone = number_of_users_in_zone
        self._number_of_users_in_ap = number_of_users_in_ap
        self._operation_status = operation_status
        self._timestamp = timestamp
        self._link = link

    @classmethod
    def from_dict(cls, dikt) -> 'ZoneStatusNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZoneStatusNotification of this ZoneStatusNotification.  # noqa: E501
        :rtype: ZoneStatusNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_data(self) -> CallbackData:
        """Gets the callback_data of this ZoneStatusNotification.


        :return: The callback_data of this ZoneStatusNotification.
        :rtype: CallbackData
        """
        return self._callback_data

    @callback_data.setter
    def callback_data(self, callback_data: CallbackData):
        """Sets the callback_data of this ZoneStatusNotification.


        :param callback_data: The callback_data of this ZoneStatusNotification.
        :type callback_data: CallbackData
        """

        self._callback_data = callback_data

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this ZoneStatusNotification.


        :return: The zone_id of this ZoneStatusNotification.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this ZoneStatusNotification.


        :param zone_id: The zone_id of this ZoneStatusNotification.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def access_point_id(self) -> AccessPointId:
        """Gets the access_point_id of this ZoneStatusNotification.


        :return: The access_point_id of this ZoneStatusNotification.
        :rtype: AccessPointId
        """
        return self._access_point_id

    @access_point_id.setter
    def access_point_id(self, access_point_id: AccessPointId):
        """Sets the access_point_id of this ZoneStatusNotification.


        :param access_point_id: The access_point_id of this ZoneStatusNotification.
        :type access_point_id: AccessPointId
        """

        self._access_point_id = access_point_id

    @property
    def number_of_users_in_zone(self) -> NumberOfUsersInZone:
        """Gets the number_of_users_in_zone of this ZoneStatusNotification.


        :return: The number_of_users_in_zone of this ZoneStatusNotification.
        :rtype: NumberOfUsersInZone
        """
        return self._number_of_users_in_zone

    @number_of_users_in_zone.setter
    def number_of_users_in_zone(self, number_of_users_in_zone: NumberOfUsersInZone):
        """Sets the number_of_users_in_zone of this ZoneStatusNotification.


        :param number_of_users_in_zone: The number_of_users_in_zone of this ZoneStatusNotification.
        :type number_of_users_in_zone: NumberOfUsersInZone
        """

        self._number_of_users_in_zone = number_of_users_in_zone

    @property
    def number_of_users_in_ap(self) -> NumberOfUsersInAP:
        """Gets the number_of_users_in_ap of this ZoneStatusNotification.


        :return: The number_of_users_in_ap of this ZoneStatusNotification.
        :rtype: NumberOfUsersInAP
        """
        return self._number_of_users_in_ap

    @number_of_users_in_ap.setter
    def number_of_users_in_ap(self, number_of_users_in_ap: NumberOfUsersInAP):
        """Sets the number_of_users_in_ap of this ZoneStatusNotification.


        :param number_of_users_in_ap: The number_of_users_in_ap of this ZoneStatusNotification.
        :type number_of_users_in_ap: NumberOfUsersInAP
        """

        self._number_of_users_in_ap = number_of_users_in_ap

    @property
    def operation_status(self) -> OperationStatus:
        """Gets the operation_status of this ZoneStatusNotification.


        :return: The operation_status of this ZoneStatusNotification.
        :rtype: OperationStatus
        """
        return self._operation_status

    @operation_status.setter
    def operation_status(self, operation_status: OperationStatus):
        """Sets the operation_status of this ZoneStatusNotification.


        :param operation_status: The operation_status of this ZoneStatusNotification.
        :type operation_status: OperationStatus
        """

        self._operation_status = operation_status

    @property
    def timestamp(self) -> Timestamp:
        """Gets the timestamp of this ZoneStatusNotification.


        :return: The timestamp of this ZoneStatusNotification.
        :rtype: Timestamp
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: Timestamp):
        """Sets the timestamp of this ZoneStatusNotification.


        :param timestamp: The timestamp of this ZoneStatusNotification.
        :type timestamp: Timestamp
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def link(self) -> List[Link]:
        """Gets the link of this ZoneStatusNotification.

        Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification.  # noqa: E501

        :return: The link of this ZoneStatusNotification.
        :rtype: List[Link]
        """
        return self._link

    @link.setter
    def link(self, link: List[Link]):
        """Sets the link of this ZoneStatusNotification.

        Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification.  # noqa: E501

        :param link: The link of this ZoneStatusNotification.
        :type link: List[Link]
        """

        self._link = link
