# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZoneStatusSubscription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_correlator: ClientCorrelator=None, resource_url: ResourceURL=None, callback_reference: CallbackReference=None, zone_id: ZoneId=None, number_of_users_zone_threshold: NumberOfUsersZoneThreshold=None, number_of_users_ap_threshold: NumberOfUsersAPThreshold=None, operation_status: List[OperationStatus]=None):  # noqa: E501
        """ZoneStatusSubscription - a model defined in Swagger

        :param client_correlator: The client_correlator of this ZoneStatusSubscription.  # noqa: E501
        :type client_correlator: ClientCorrelator
        :param resource_url: The resource_url of this ZoneStatusSubscription.  # noqa: E501
        :type resource_url: ResourceURL
        :param callback_reference: The callback_reference of this ZoneStatusSubscription.  # noqa: E501
        :type callback_reference: CallbackReference
        :param zone_id: The zone_id of this ZoneStatusSubscription.  # noqa: E501
        :type zone_id: ZoneId
        :param number_of_users_zone_threshold: The number_of_users_zone_threshold of this ZoneStatusSubscription.  # noqa: E501
        :type number_of_users_zone_threshold: NumberOfUsersZoneThreshold
        :param number_of_users_ap_threshold: The number_of_users_ap_threshold of this ZoneStatusSubscription.  # noqa: E501
        :type number_of_users_ap_threshold: NumberOfUsersAPThreshold
        :param operation_status: The operation_status of this ZoneStatusSubscription.  # noqa: E501
        :type operation_status: List[OperationStatus]
        """
        self.swagger_types = {
            'client_correlator': ClientCorrelator,
            'resource_url': ResourceURL,
            'callback_reference': CallbackReference,
            'zone_id': ZoneId,
            'number_of_users_zone_threshold': NumberOfUsersZoneThreshold,
            'number_of_users_ap_threshold': NumberOfUsersAPThreshold,
            'operation_status': List[OperationStatus]
        }

        self.attribute_map = {
            'client_correlator': 'clientCorrelator',
            'resource_url': 'resourceURL',
            'callback_reference': 'callbackReference',
            'zone_id': 'zoneId',
            'number_of_users_zone_threshold': 'numberOfUsersZoneThreshold',
            'number_of_users_ap_threshold': 'numberOfUsersAPThreshold',
            'operation_status': 'operationStatus'
        }

        self._client_correlator = client_correlator
        self._resource_url = resource_url
        self._callback_reference = callback_reference
        self._zone_id = zone_id
        self._number_of_users_zone_threshold = number_of_users_zone_threshold
        self._number_of_users_ap_threshold = number_of_users_ap_threshold
        self._operation_status = operation_status

    @classmethod
    def from_dict(cls, dikt) -> 'ZoneStatusSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZoneStatusSubscription of this ZoneStatusSubscription.  # noqa: E501
        :rtype: ZoneStatusSubscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_correlator(self) -> ClientCorrelator:
        """Gets the client_correlator of this ZoneStatusSubscription.


        :return: The client_correlator of this ZoneStatusSubscription.
        :rtype: ClientCorrelator
        """
        return self._client_correlator

    @client_correlator.setter
    def client_correlator(self, client_correlator: ClientCorrelator):
        """Sets the client_correlator of this ZoneStatusSubscription.


        :param client_correlator: The client_correlator of this ZoneStatusSubscription.
        :type client_correlator: ClientCorrelator
        """

        self._client_correlator = client_correlator

    @property
    def resource_url(self) -> ResourceURL:
        """Gets the resource_url of this ZoneStatusSubscription.


        :return: The resource_url of this ZoneStatusSubscription.
        :rtype: ResourceURL
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: ResourceURL):
        """Sets the resource_url of this ZoneStatusSubscription.


        :param resource_url: The resource_url of this ZoneStatusSubscription.
        :type resource_url: ResourceURL
        """

        self._resource_url = resource_url

    @property
    def callback_reference(self) -> CallbackReference:
        """Gets the callback_reference of this ZoneStatusSubscription.


        :return: The callback_reference of this ZoneStatusSubscription.
        :rtype: CallbackReference
        """
        return self._callback_reference

    @callback_reference.setter
    def callback_reference(self, callback_reference: CallbackReference):
        """Sets the callback_reference of this ZoneStatusSubscription.


        :param callback_reference: The callback_reference of this ZoneStatusSubscription.
        :type callback_reference: CallbackReference
        """
        if callback_reference is None:
            raise ValueError("Invalid value for `callback_reference`, must not be `None`")  # noqa: E501

        self._callback_reference = callback_reference

    @property
    def zone_id(self) -> ZoneId:
        """Gets the zone_id of this ZoneStatusSubscription.


        :return: The zone_id of this ZoneStatusSubscription.
        :rtype: ZoneId
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: ZoneId):
        """Sets the zone_id of this ZoneStatusSubscription.


        :param zone_id: The zone_id of this ZoneStatusSubscription.
        :type zone_id: ZoneId
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def number_of_users_zone_threshold(self) -> NumberOfUsersZoneThreshold:
        """Gets the number_of_users_zone_threshold of this ZoneStatusSubscription.


        :return: The number_of_users_zone_threshold of this ZoneStatusSubscription.
        :rtype: NumberOfUsersZoneThreshold
        """
        return self._number_of_users_zone_threshold

    @number_of_users_zone_threshold.setter
    def number_of_users_zone_threshold(self, number_of_users_zone_threshold: NumberOfUsersZoneThreshold):
        """Sets the number_of_users_zone_threshold of this ZoneStatusSubscription.


        :param number_of_users_zone_threshold: The number_of_users_zone_threshold of this ZoneStatusSubscription.
        :type number_of_users_zone_threshold: NumberOfUsersZoneThreshold
        """

        self._number_of_users_zone_threshold = number_of_users_zone_threshold

    @property
    def number_of_users_ap_threshold(self) -> NumberOfUsersAPThreshold:
        """Gets the number_of_users_ap_threshold of this ZoneStatusSubscription.


        :return: The number_of_users_ap_threshold of this ZoneStatusSubscription.
        :rtype: NumberOfUsersAPThreshold
        """
        return self._number_of_users_ap_threshold

    @number_of_users_ap_threshold.setter
    def number_of_users_ap_threshold(self, number_of_users_ap_threshold: NumberOfUsersAPThreshold):
        """Sets the number_of_users_ap_threshold of this ZoneStatusSubscription.


        :param number_of_users_ap_threshold: The number_of_users_ap_threshold of this ZoneStatusSubscription.
        :type number_of_users_ap_threshold: NumberOfUsersAPThreshold
        """

        self._number_of_users_ap_threshold = number_of_users_ap_threshold

    @property
    def operation_status(self) -> List[OperationStatus]:
        """Gets the operation_status of this ZoneStatusSubscription.

        List of operation status values to generate notifications for (these apply to all access points within a zone).  # noqa: E501

        :return: The operation_status of this ZoneStatusSubscription.
        :rtype: List[OperationStatus]
        """
        return self._operation_status

    @operation_status.setter
    def operation_status(self, operation_status: List[OperationStatus]):
        """Sets the operation_status of this ZoneStatusSubscription.

        List of operation status values to generate notifications for (these apply to all access points within a zone).  # noqa: E501

        :param operation_status: The operation_status of this ZoneStatusSubscription.
        :type operation_status: List[OperationStatus]
        """

        self._operation_status = operation_status
